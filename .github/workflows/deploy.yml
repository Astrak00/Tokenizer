name: Deploy

permissions:
  contents: write

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build-and-upload:
    name: Build and upload
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        include:
          - build: linux
            os: ubuntu-latest
            target: x86_64-unknown-linux-musl
    
          - build: macos-x86
            os: macos-latest
            target: x86_64-apple-darwin
    
          - build: windows-x86
            os: windows-latest
            target: x86_64-pc-windows-gnu
    
          - build: linux-arm
            os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
    
          - build: macos-arm
            os: macos-latest
            target: aarch64-apple-darwin

          - build: windows-arm
            os: windows-latest
            target: aarch64-pc-windows-gnu

    steps:
    - name: Clone repository
      uses: actions/checkout@v3

    - name: Install Cross
      run: cargo install cross

    - name: Build with Cross
      run: cross build --verbose --release --target ${{ matrix.target }}

    - name: Get version
      run: |
        version=$(grep '^version' Cargo.toml | head -1 | awk '{print $3}' | tr -d '"')
        echo "VERSION=$version" >> $GITHUB_ENV

    - name: Build archive
      shell: bash
      run: |
        binary_name="tokenizer" # Replace with the name of your binary
        
        dirname="$binary_name-${{ env.VERSION }}-${{ matrix.target }}"
        mkdir "$dirname"
        if [ "${{ matrix.os }}" = "windows-latest" ]; then
          mv "target/${{ matrix.target }}/release/$binary_name.exe" "$dirname"
        else
          mv "target/${{ matrix.target }}/release/$binary_name" "$dirname"
        fi

        if [ "${{ matrix.os }}" = "windows-latest" ]; then
          7z a "$dirname.zip" "$dirname"
          echo "ASSET=$dirname.zip" >> $GITHUB_ENV
        else
          tar -czf "$dirname.tar.gz" "$dirname"
          echo "ASSET=$dirname.tar.gz" >> $GITHUB_ENV
        fi

    - name: Install 7z on Windows
      if: runner.os == 'Windows'
      run: choco install 7zip

    - name: Upload the binaries
      uses: softprops/action-gh-release@v1
      with:
        files: |
          ${{ env.ASSET }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
